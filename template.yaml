AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: clients-microservice

Parameters:
  UserPoolId:
    Type: String
    Description: User Pool ID for cognito provider
  UserPoolClientId:
    Type: String
    Description: Client ID for user pool
  TableName:
    Type: String
    Default: clients
    Description: Name of the DynamoDB table

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 100
    MemorySize: 128
    Architectures:
      - x86_64
    Environment:
      Variables:
        TABLE_NAME: !Ref TableName
        ENDPOINT_OVERRIDE: ""
        userId: ""
        NODE_ENV: "production"

Resources:
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
        DefaultAuthorizer: GeneralAuth
        Authorizers:
          GeneralAuth:
            IdentitySource: $request.header.Authorization
            JwtConfiguration:
              audience:
                - !Ref UserPoolClientId
              issuer: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPoolId}
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
          - OPTIONS
          - PATCH
          - DELETE
        AllowOrigins:
          - http://localhost:3001
          - https://yakhousam-invoicing-app.netlify.app
          - https://invoicing-app.khoudiryaya.dev
        AllowHeaders:
          - Content-Type
          - Authorization

  Table:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TableName: !Ref TableName
      AttributeDefinitions:
        - AttributeType: S
          AttributeName: userId
        - AttributeType: S
          AttributeName: clientId
        - AttributeType: S
          AttributeName: clientName
        - AttributeType: S
          AttributeName: email
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: clientId
          KeyType: RANGE
      LocalSecondaryIndexes:
        - IndexName: clientNameIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: clientName
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: emailIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: email
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: false

  postClientFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: postClient.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /
            Method: POST
            ApiId: !Ref HttpApi

    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - functions/postClient.ts

  getAllClientsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: getAllClients.handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Table
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /
            Method: GET
            ApiId: !Ref HttpApi

    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - functions/getAllClients.ts

  getClientByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: getClientById.handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Table
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /{clientId}
            Method: GET
            ApiId: !Ref HttpApi

    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - functions/getClientById.ts

  updateClientFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: updateClient.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /{clientId}
            Method: PATCH
            ApiId: !Ref HttpApi
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - functions/updateClient.ts

Outputs:
  HttpApi:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/
